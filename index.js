import{i,S as h,a as L}from"./assets/vendor-tnUJPedx.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();const b="47415256-2dfc8fe63cf3afc0ab872a04e",v="https://pixabay.com/api/",w=document.querySelector(".form"),a=document.querySelector(".gallery"),q=document.querySelector(".but-delete"),u=document.querySelector(".btn-load-more"),S=document.querySelector("#fish-list-btn"),f=document.querySelector("#fish-list");let d="",c=1;const m=20,p=["anchovy","barracuda","bass","bluefish","bream","carp","catfish","chub","cod","dogfish","eel","flounder","grouper","haddock","halibut","herring","kingfish","lamprey","mackerel","mahi-mahi","marlin","minnow","mullet","perch","pike","pollock","salmon","sardine","shark","snapper","sole","sturgeon","sunfish","tarpon","tilapia","trout","tuna","wahoo","whitefish","zander"];function T(){f.innerHTML=p.map(t=>`<li class="fish-list-item">${t}</li>`).join("")}S.addEventListener("click",()=>{f.classList.toggle("active")});f.addEventListener("click",t=>{if(t.target.classList.contains("fish-list-item")){const r=t.target.textContent;document.querySelector(".search-input").value=r,f.classList.remove("active")}});w.addEventListener("submit",async t=>{if(t.preventDefault(),d=t.target.elements.query.value.trim().toLowerCase(),!p.includes(d)){i.error({message:"Please enter the name of a fish."});return}c=1,a.innerHTML="",t.target.elements.query.value="";try{const r=await g(d,c,m);if(r.hits.length===0){i.info({message:"No images found. Try another fish."});return}y(r.hits),new h(".gallery a",{captionsData:"alt",captionDelay:250}),u.style.display=r.totalHits>m?"block":"none",window.scrollTo({top:a.offsetTop,behavior:"smooth"})}catch{i.error({message:"Something went wrong. Please try again later."})}});q.addEventListener("click",()=>{a.innerHTML="",u.style.display="none",i.info({message:"Gallery cleared."})});u.addEventListener("click",async()=>{c+=1;try{const t=await g(d,c,m);y(t.hits),new h(".gallery a",{captionsData:"alt",captionDelay:250}).refresh(),c*m>=t.totalHits&&(u.style.display="none",i.info({message:"You've reached the end of the results."})),window.scrollTo({top:a.offsetTop+a.scrollHeight,behavior:"smooth"})}catch{i.error({message:"Error loading more images."})}});async function g(t,r=1,n=20){const{data:s}=await L.get(v,{params:{key:b,q:t,image_type:"photo",orientation:"horizontal",page:r,per_page:n}});return s}function y(t){const r=t.map(({largeImageURL:n,webformatURL:s,tags:e,likes:o,views:l})=>`
    <li class="list-item">
      <a href="${n}">
        <img src="${s}" alt="${e}" loading="lazy" />
        <div class="info">
          <p><strong>Likes:</strong> ${o}</p>
          <p><strong>Views:</strong> ${l}</p>
          <p><strong>Tags:</strong> ${e}</p>
        </div>
      </a>
    </li>
  `).join("");a.insertAdjacentHTML("beforeend",r)}T();
//# sourceMappingURL=index.js.map
